@use 'sass:map';
@use 'variables' as *;

.header-wrapper {
  position: relative; /* This allows positioning child elements within it */
}
// About Page
.about-page {
  max-width: 1200px;
  margin: 0 auto;
  padding: 2rem;
}

// Bio section with image and text
.bio-section {
  display: flex;
  gap: 2rem;
  margin-bottom: 2rem;
}

.bio-section img {
  height: 300px;
  width: auto;
  max-width: 100%; // Ensure image doesn't overflow on mobile
}

.bio-content {
  flex: 1;
}

h3, .skills-heading {
  color: #666;
  font-size: 2.4rem;
  margin-top: 0;
  margin-bottom: 1.5rem;
}

// Skills grid
.skills-grid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 1.5rem;
}

.skill-item p {
  margin: 0;
}

// Mobile responsiveness
@media (max-width: 768px) {
  .bio-section {
    flex-direction: column;
    align-items: center;
    text-align: center;
  }

  .bio-section img {
    height: auto;
    width: 250px; // Fixed width on mobile
  }

  .bio-content {
    width: 100%;
  }

  .skills-grid {
    grid-template-columns: 1fr; // Single column on mobile
  }

  .skill-item {
    text-align: left; // Keep skills text left-aligned
  }
}

// Even smaller screens
@media (max-width: 480px) {
  .about-page {
    padding: 1rem;
  }

  .bio-section img {
    width: 200px; // Slightly smaller on very small screens
  }
}

// Skills Section
.skills-section h2 {
  font-size: map.get($font-sizes, 2xl);
  margin-bottom: map.get($spacing, base);
}

.skills-grid ul {
  list-style: none;
  padding: 0;
}

// Contact Section
.contact-section {
  margin-top: map.get($spacing, base);

  .form-group {
    margin-bottom: map.get($spacing, xs);
    label {
      display: block;
      margin-bottom: map.get($spacing, xs);
    }

    input,
    textarea {
      width: 100%;
      padding: map.get($spacing, base);
      border: 1px solid map.get(map.get($colors, neutral), gray-300);
      box-shadow: map.get($shadows, sm); 
    }
  }

  .submit-btn {
    background-color: map.get(map.get($colors, primary), base);
    color: map.get(map.get($colors, neutral), white);
    padding: map.get($spacing, base) map.get($spacing, lg);
    border: none;
    cursor: pointer;
    display: block;  // Make the button a block-level element
    margin: 0 auto; // Center horizontally 
    width: auto;     // Or set a specific width if needed
    transition: background-color map.get($transitions, base);

    &:hover {
      background-color: map.get(map.get($colors, primary), dark);
    }
  }
}

// Additional styles
ul, ol {
  padding-left: 40px; /* Adjust the value as needed */
}

.social-links a {
  font-size: map.get($font-sizes, 2xl);
  color: #5B8C5A;
}

.top-right {
  position: absolute;
  top: 1px;
  right: 10px;
}

// Add spacing for fixed header
main {
  padding-top: 80px; // Adjust this value based on your header height
}

